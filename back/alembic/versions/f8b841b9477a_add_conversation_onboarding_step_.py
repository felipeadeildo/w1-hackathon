"""add conversation onboarding step relationship

Revision ID: f8b841b9477a
Revises: a33d9034759c
Create Date: 2025-05-23 02:15:50.823919

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f8b841b9477a"
down_revision: str | None = "a33d9034759c"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # Create the enum type first
    sender_type_enum = sa.Enum("USER", "LLM", "CONSULTANT", "SYSTEM", name="sendertype")
    sender_type_enum.create(op.get_bind(), checkfirst=True)

    # Then proceed with the rest of the migration
    op.add_column("conversation", sa.Column("onboarding_step_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "conversation", "onboardingstep", ["onboarding_step_id"], ["id"])
    op.add_column(
        "message",
        sa.Column("sender_type", sender_type_enum, nullable=False),
    )
    op.drop_column("message", "is_from_system")
    op.drop_column("message", "extracted_data")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "message",
        sa.Column(
            "extracted_data",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "message", sa.Column("is_from_system", sa.BOOLEAN(), autoincrement=False, nullable=False)
    )
    op.drop_column("message", "sender_type")
    op.drop_constraint(None, "conversation", type_="foreignkey")
    op.drop_column("conversation", "onboarding_step_id")
    # ### end Alembic commands ###
